name: terraform-plan

on:
  workflow_dispatch:
  pull_request:
    branches: [ dev, main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-plan.yml'

jobs:
  plan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write

    concurrency:
      group: tf-plan-${{ github.ref_name }}
      cancel-in-progress: true

    env:
      TF_WORKING_DIR: terraform
      GOOGLE_CLOUD_PROJECT: esg-dev-jahid

    steps:
      - uses: actions/checkout@v4

      - name: Auth (OIDC)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/1035645097437/locations/global/workloadIdentityPools/github-pool/providers/github-provider-dppd
          service_account: github-ci-dppd@esg-dev-jahid.iam.gserviceaccount.com
          export_environment_variables: true

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Clean TF dir
        run: |
          rm -rf "${{ env.TF_WORKING_DIR }}"/.terraform
          rm -f  "${{ env.TF_WORKING_DIR }}"/.terraform.lock.hcl

      - name: Init
        run: terraform -chdir=${{ env.TF_WORKING_DIR }} init -input=false -reconfigure -upgrade

      - name: Format check
        run: terraform -chdir=${{ env.TF_WORKING_DIR }} fmt -check

      - name: Validate
        run: terraform -chdir=${{ env.TF_WORKING_DIR }} validate

      - name: Plan
        run: terraform -chdir=${{ env.TF_WORKING_DIR }} plan -lock-timeout=120s -input=false -out=tfplan

      - name: Render plan (human)
        run: terraform -chdir=${{ env.TF_WORKING_DIR }} show -no-color tfplan > plan.txt

      - name: Render plan (json)
        run: terraform -chdir=${{ env.TF_WORKING_DIR }} show -json tfplan > plan.json

      - name: Upload plan artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ github.sha }}
          path: |
            ${{ env.TF_WORKING_DIR }}/tfplan
            ${{ env.TF_WORKING_DIR }}/plan.txt
            ${{ env.TF_WORKING_DIR }}/plan.json

      - name: Comment plan on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = process.env.TF_WORKING_DIR + '/plan.txt';
            const body = fs.readFileSync(path, 'utf8');
            const summary = body.match(/Plan:.*$/m)?.[0] || 'Plan generated.';
            const truncated = body.length > 60000 ? body.slice(0, 60000) + '\nâ€¦(truncated)' : body;
            const md = `### Terraform plan\n**${summary}**\n\n<details><summary>Full plan</summary>\n\n\`\`\`\n${truncated}\n\`\`\`\n</details>`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: md
            });